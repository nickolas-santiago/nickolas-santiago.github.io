{"projects":[
	{"name":"Fragile Equilibrium",
	 "description":[
		"Fragile Equilibrium is a side-scroller shoot-em-up where the user is forced to deal with a relentless onslaught of enemies from one side of the screen while simultaneously dealing with the game's beautiful fracturing world on the other side because pieces of the game's screen break off over time. The player always has the choice of when to piece the world back together. The game tracks how a player decides to deal with these issues rewarding, and punishing, a player based on individual playstyles. The player must balance their playstyle, balance how much of the screen they can afford to watch decay away, and balance the game's beauty with its depravity.",
		 "Fragile Equilibrium was made by a team through the MAGIC Spells Studios at RIT with a mixed team of developers and designers. I mainly worked on developing the game's various main menu screens and the game's HUD based on sketches from the designers. This included adding the player’s arsenal and a health bar that helped the player track how they were playing for the HUD and various main menu screens for game settings. This also meant ensuring all the buttons worked with an XBox controller. In the beginning, i worked on setting up enemy waves, early Unity prototypes, and the game's states. The project's UI were developed using HTML, CSS, vanilla JavaScript, and some jQuery."
		],
     "thumbnail":"media/fragileequilibrium_logo.png",
	 "imgs":[
		{"src":"media/fragileequilibrium_2.png",
		 "alt":"The player can always choose when to repair the shattering world."},
		 {"src":"media/fragileequilibrium_1.png",
		  "alt":"FE offers exciting gameplay in a beautifully designed environment."},
		 {"src":"media/fragileequilibrium_3.png",
		  "alt":"Players are armed with an arsenal of weapons that changes based on their playstyle."},
		 {"src":"media/fragileequilibrium_4.png",
		  "alt":"Players are constantly dealing with enemies on one side of the screen and the fracturing world on the other."}
		 ],
	 "link":"https://www.facebook.com/fragileeq/",
	 "link_description":"Click here for the game's Facebook page.",
     "languages":"HTML, CSS, JavaScript (jQuery)"
	},
    
    {"name":"Inspire",
	 "description":[
		"The Inspire project was a physical interactive installation designed for the Rock and Roll Hall of Fame and was presented at the 2016 ImagineRIT to the large crowds that came to experience it. The project allowed two users to pick from a select group of musical artists from different decades and then generated an artist that was most similar to or was a common influencer of the chosen artists. For example, if one user chose Beyonce and another chose Michael Jackson, the Inspire would recognize Rihanna as the most common artist. Images of the artists were then projected onto a spire with the common or influencing artist occupying the very top while their music filled the room, allowing everyone in the room to enjoy the discovery.",
		"The Inspire experience was created by a mixed group of interactive designers and developers working from the project's beginning concept stages all the way to the actual presentation and postmortem. I worked on beginning research of and prototyping with the Rovi API that allowed us gather information about similar and influencing artists. Along with the other developers, I also spent time researching and making smaller prototypes of similar projects. Most of the research and prototyping for the project was written using JavaScript. Once the team decided what our project would be, I focused on getting the images to project properly onto the spire's flat surfaces which was done using OpenFrameworks library in C++ A lot of that included getting proportions to look good on flat faces of the physical spire as well as getting everything to work on a timer."
		],
     "thumbnail":"media/InspireLogoLoop.gif",
	 "imgs":[
		{"src":"media/inspire_1.jpg",
		 "alt":"Images of the artists were then projected onto a spire allowing everyone in the room to enjoy the discovery."},
		{"src":"media/inspire_2.jpg",
		 "alt":"The spire itself stood about 9 feet tall."},
		{"src":"media/inspire_4.jpg",
		 "alt":"A shot of the Inspire and the touchscreen we used."},
		{"src":"media/inspire_5.jpg",
		 "alt":"The project allowed two users to pick from a select group of musical artists."}
		 ],
	 "link":"https://vimeo.com/201447775",
	 "link_description":"Here is a highlight reel from ImagineRIT that was presented at our postmortem.",
     "languages":"JavaScript, C++ (OpenFrameworks)"
	},
    
    {"name":"Word Search App",
	 "description":[
		"The Word Search App is a word searching game where the user is given 20 words across 3 levels. The 20 words are all names of neighborhoods found across New York’s five boroughs, and just like the real city, the player must move fast! The game has a timer which bumps up each level, but the amount of words found in each level bumps up too. Once you find a word, you better lock it in because the words won’t stay in those spots forever. The game is programmed to change every letter’s location at random, and the chance of a word moving gets higher each level.So you better hope a word doesn’t move, and maybe pray for a Hail Mary time bonus. (Now, if I only I could get the trains to move this quick!)",
        "The Word Search App was a personal project I developed when I started learning some React. The actual game itself is written using vanilla JavaScript and jQuery with the HTML canvas tag. I also added some flip animations to reveal words and time bonuses to give the project a little bit a flare. The project was then wrapped up in some React. I really wanted to test using React and other libraries together. I had a lot of fun making the game, especially working out the algorithms for deciding where words would fit. This was definitely a fun way to test how React would interact with other libraries."],
     "thumbnail":"media/wordsearchapp_thumbnail.png",
	 "imgs":[
		{"src":"media/wordsearchapp_directions.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/wordsearchapp_levelone.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/wordsearchapp_ready.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/wordsearchapp_go.png",
		 "alt":"We had multiple pages for the different case studies and stories the students wanted presented."},
        {"src":"media/wordsearchapp_leveltwo.png",
		 "alt":"With another student, I worked on implementing the content and CSS into the Wordpress."},
		{"src":"media/wordsearchapp_levelthree.png",
		 "alt":"For the project, we collected various pictures of the team and had a photo gallery on the site."}
		 ],
	 "link":"https://github.com/nickolas-santiago/WordSearchApp",
	 "link_description":"Code for this project can be seen and downloaded here.",
     "languages":"HTML, CSS, JavaScript (React.js, jQuery, canvas)"
    },
    
	{"name":"Violent Gun Crimes in the US",
	 "description":[
		"For this project, I wanted to work on making an interesting visualization with a large data set. The end result features two major interactive sections: an SVG with a map and timeline and a list with detailed information. Users can control what month and year the information represents by clicking on different segments of the timeline. The hundreds and thousands of crimes from that month are then displayed on the map. The other side of the project, the list, offers information for each crime including who was involved, a description, and a link an article written about the event. There are different ways to order the list, and clicking a state on the map filters the list, making it a little easier to find specific crimes.",
		"As mentioned, I wanted to to work with a big full data set, but I ended up with a lot more data than I expected when starting this project. While the original data set included data from 2013 to 2018, but the data from 2014 to 2017 was more complete so I stuck with those years. It was exciting to work with such a big data set to produce a really stunning, and rather eye-opening, experience. The project was developed using HTML, CSS, and JavaScript, specifically using D3.js. Information was parsed from Gun Violence Archive."
		],
     "thumbnail":"media/violent_gun_crimes_map_thumbnail.png",
	 "imgs":[
		{"src":"media/violent_gun_crimes_map_1.png",
		 "alt":"The project features an interactive map, timeline, and list to visualize gun crimes in the US from 2014 to 2018."},
		{"src":"media/violent_gun_crimes_map_2.png",
		 "alt":"Clicking the timeline changes which crimes are displayed, and clicking the list will pinpoint where the exact crime happened."},
		{"src":"media/violent_gun_crimes_map_3.png",
		 "alt":"Clicking the map itself and using different ways of ordering the list can help find a specific crime."},
		{"src":"media/violent_gun_crimes_map_4.png",
		 "alt":"The list includes information about who was involved, what happened, and a link to a related article."}
		 ],
	 "link":"https://github.com/nickolas-santiago/Violent-Gun-Crime-Map",
	 "link_description":"Code for this project can be seen and downloaded here.",
     "languages":"HTML, CSS, JavaScript (d3.js)"
	},
    
	{"name":"Map of Global Surface Temperature by Year",
	 "description":[
		"This project shows the rise surface temperature for each country by year on a color coded map. The user controls which year is being shown by using a slider on the bottom. The project includes information all the way from 1750 to 2013. Now not every country has their information included in the first half of the data set, so it’s interesting to watch the information fill itself in over time. By clicking on the play button next to the slider, an animation begins showing the user the actual rise of surface temperature. By clicking on a country, the map will zoom in and show the user a line graph depicting the country’s surface temperature over the given time. Extra information about any natural disasters from that year will also be shown.",
		"This project was a developed by myself and another student while at RIT. While my partner worked getting the map to project properly and a working animation, I worked on creating the slider, made the line graphs, and added natural disaster info where necessary. The project was developed using HTML, CSS, and JavaScript, specifically using D3.js. Information was parsed from Berkley Earth and the International Disaster Database."
		],
     "thumbnail":"media/globaltemp_thumb.png",
	 "imgs":[
		{"src":"media/globaltemp_1.png",
		 "alt":"Users can see the average surface temperature for each country between 1750 and 2013 using the easy-to-read key."},
		{"src":"media/globaltemp_2.png",
		 "alt":"Clicking on a country will show a graph of its average surface temperature through time and, sometimes, a list of natural disasters."},
		{"src":"media/globaltemp_3.png",
		 "alt":"Some countries have very noticeable rising surface temperatures; others can be harder to see."}
		 ],
	 "link":"https://github.com/nickolas-santiago/climatechange-visualization",
	 "link_description":"Code for this project can be seen and downloaded here.",
     "languages":"HTML, CSS, JavaScript (d3.js)"
	},
    
	{"name":"Street Fighter II Character App",
	 "description":[
		"This project is features the characters from the 1991 game Street Fighter II. Using this app, you can look up the original eight playable characters and view various stats, information, and the steps to execute their famous special moves.",
         "The app was made using the React.js library with minor CSS. The data is rendered asynchronously."
        ],
     "thumbnail":"media/SFIICALogo.png",
	 "imgs":[
		{"src":"media/SFII_a.png",
		 "alt":"The project features the original eight playable characters from the 1991 game Street Fighter II."},
		{"src":"media/SFII_b.png",
		 "alt":"The app is initiated using a search function to find the characters."},
        {"src":"media/SFII_c.png",
         "alt":"Each character has a page that features various stats and information including their speed and power levels and their winning tagline."},
        {"src": "media/SFII_d.png",
         "alt":"Each character page also features a section showing the character's special moves and how they can be executed."}
         ],
	 "link":"https://github.com/elknickyknick/Street-Fighter-II-Character-App",
	 "link_description":"Click here to view the code, or download it and try it for yourself.",
     "languages":"JavaScript (React.js)"
    },
    
    {"name":"Chemical Reaction Diagram",
	 "description":[
		"Many games feature some sort of crafting mechanic that allow players to combine materials to produce better and/or rarer items. This project features an example of a visualization that could help players see how certain items are produced or what items they could get from what they have in their inventory. To show this, I used a limited version of EVE Online’s reactions mechanic. By hovering over any of the terms on the screen, the user can see what reactions the selected chemical or element is a reactant of, and any other chemicals associated with it. For example, a user can see that if they had a ton the element Vanadium, they could make some Fernite Alloy, Hyperflurite, and Vanadium Hafnite, and they could also see the other necessary elements needed for these reactions. A user looking to make some Ferrogel, a complex reaction, could see what simple reactions are needed, and what elements they can farm for those reactions. The way the project was a developed, another group of reactions produced by complex reactions could be added with little to no headache. The project was developed using HTML, CSS, and JavaScript, specifically using D3.js. The data comes from an EVE Online fan blog."
        ],
     "thumbnail":"media/eveonlinechemicalreactiondiagram_thumbnail.png",
	 "imgs":[
		{"src":"media/eveonlinechemicalreactiondiagram_scandium.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/eveonlinechemicalreactiondiagram_vanadium.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/eveonlinechemicalreactiondiagram_hyperflurite.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/eveonlinechemicalreactiondiagram_titanium.png",
		 "alt":"We had multiple pages for the different case studies and stories the students wanted presented."}
		 ],
	 "link":"https://github.com/nickolas-santiago/EVE-Online-Chemical-Reaction-Diagram",
	 "link_description":"Click here to view the code, or download it and try it for yourself.",
     "languages":"HTML, CSS (Wordpress)"
    },
    
    {"name":"When Rochester Was Royal Site",
	 "description":[
		"In March 2015, the students of RIT's museum studies major presented an exhibit about Rochester's old professional basketball team the Rochester Royals. The exhibit looked into the history of the team, the reason they had to leave Rochester, the life story of their manager Les Harrison, and a general look into the history of race in basketball - the Rochester Royals had one of the first African American basketball players.",
        "With another student, I worked on implementing content provided by other students into the Wordpress site. We also implemented an image gallery onto the site. "],
     "thumbnail":"media/royalsexhibit.png",
	 "imgs":[
		{"src":"media/royalsexhibit.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/royalsexhibit_homepage.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/royalsexhibit_homepage.png",
		 "alt":"I worked on a Wordpress website for an exhibit presented by the museum studies students at RIT."},
		{"src":"media/royalsexhibit_pages.png",
		 "alt":"We had multiple pages for the different case studies and stories the students wanted presented."},
        {"src":"media/royalsexhibit_maindisplay.png",
		 "alt":"With another student, I worked on implementing the content and CSS into the Wordpress."},
		{"src":"media/royalsexhibit_lesharrison.png",
		 "alt":"For the project, we collected various pictures of the team and had a photo gallery on the site."}
		 ],
	 "link":"https://royalsexhibit.wordpress.com/",
	 "link_description":"The exhibit's official site can been seen here.",
     "languages":"HTML, CSS (Wordpress)"
    },

    {"name":"Boomshine",
	 "description":[
		"The project was based on the addicting internet game, Boomshine. The goal of the game is to pop as many circles in each level as possible. This is done by clicking on one circle per level, causing it to expand, and then causing a chain reaction when other circles come into contact with it. The player must pop a certain number of circles per level in order to move on to the next.",
        "Boomshine was written in JavaScript using the object literal notation under a JavaScript module design pattern. The actual game itself is hosted in an HTML canvas tag."
		],
     "thumbnail":"media/boomshinelogo.jpg",
	 "imgs":[
		{"src":"media/boomshine_2.png",
		 "alt":"The player must pop a certain number of circles per level in order to move on to the next."},
		{"src":"media/boomshine_3.png",
		 "alt":"Clicking one circle causes of chain reaction."},
		{"src":"media/boomshine_4.png",
		 "alt":"The accomplishment comes from seeing the entire level light up."}
		 ],
	 "link":"https://github.com/elknickyknick/Boomshine",
	 "link_description":"Click here to view the code for this project, or download it and try it for yourself.",
     "languages":"HTML, JavaScript (canvas)"
    }
]}